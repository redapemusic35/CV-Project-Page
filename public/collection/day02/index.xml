<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Day 02 on Sam&#39;s Emotions</title>
    <link>/collection/day02/</link>
    <description>Recent content in Day 02 on Sam&#39;s Emotions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="/collection/day02/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quanteda Dictionaries</title>
      <link>/collection/day02/04-packages/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/collection/day02/04-packages/</guid>
      <description>This post started as an exploration of different types of sentiment analysis. However, I ran into some issues using quanteda. Because of these issues, it occurred to me that I should probably do a post on Quanteda. Therefore, this is now a post using quanteda for text analysis, including sentiment analysis. It should be stated here, that I am largely following the tutorial at quanteda’s home page. Please go there to follow the tutorial because it is possible for some functions to change.</description>
    </item>
    
    <item>
      <title>R Objects and Commands</title>
      <link>/collection/day02/05-objects/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/collection/day02/05-objects/</guid>
      <description>Vectors Contains a set of values. These include vec_num, number vector and vec_char whwhich is a character vector. c() combines the elements of a vector and &amp;lt;- assigns a vector to a variable.
vec_num &amp;lt;- c(1, 5, 6, 3) vec_num ## [1] 1 5 6 3 vec_char &amp;lt;- c(&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;mandarin&amp;quot;, &amp;quot;melon&amp;quot;) vec_char ## [1] &amp;quot;apple&amp;quot; &amp;quot;banana&amp;quot; &amp;quot;mandarin&amp;quot; &amp;quot;melon&amp;quot; Once we have created a vector, we can extract its elements using the [] operator.</description>
    </item>
    
    <item>
      <title>Why Hugo?</title>
      <link>/collection/day02/06-hugo/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/collection/day02/06-hugo/</guid>
      <description>Why Hugo?      fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});  Activity     TIME: ⏱ 10 minutes
Let’s use this time to configure your new Hugo site.
Site configuration     Edit your config.toml file. This is your basic Hugo site configuration file. It is not quite YAML- it is written in TOML, which means we have key = value instead of key: value pairs.</description>
    </item>
    
    <item>
      <title>Why Hugo Apéro?</title>
      <link>/collection/day02/07-apero/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/collection/day02/07-apero/</guid>
      <description>Why Hugo Apéro?      fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});  Activity     TIME: ⏱ 10 minutes
Let’s get started customizing your home and “about” pages.
Make your home page     Open up content/_index.md and edit the frontmatter only.
It is important that you keep this file name. In Hugo, the home page is special- it gets special treatment. You can read more here: https://gohugo.</description>
    </item>
    
    <item>
      <title>Why blogdown?</title>
      <link>/collection/day02/08-blogdown/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/collection/day02/08-blogdown/</guid>
      <description> Why blogdown?      fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});  Activity     TIME: ⏱ 10 minutes
Choose your own adventure! You may:
 Run through the blogdown checks, following: https://alison.rbind.io/post/2020-12-27-blogdown-checks/  </description>
    </item>
    
  </channel>
</rss>
